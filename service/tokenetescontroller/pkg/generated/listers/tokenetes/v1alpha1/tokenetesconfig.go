/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tokenetes/tconfigd/tokenetescontroller/pkg/apis/tokenetes/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// TokenetesConfigLister helps list TokenetesConfigs.
// All objects returned here must be treated as read-only.
type TokenetesConfigLister interface {
	// List lists all TokenetesConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TokenetesConfig, err error)
	// TokenetesConfigs returns an object that can list and get TokenetesConfigs.
	TokenetesConfigs(namespace string) TokenetesConfigNamespaceLister
	TokenetesConfigListerExpansion
}

// tokenetesConfigLister implements the TokenetesConfigLister interface.
type tokenetesConfigLister struct {
	listers.ResourceIndexer[*v1alpha1.TokenetesConfig]
}

// NewTokenetesConfigLister returns a new TokenetesConfigLister.
func NewTokenetesConfigLister(indexer cache.Indexer) TokenetesConfigLister {
	return &tokenetesConfigLister{listers.New[*v1alpha1.TokenetesConfig](indexer, v1alpha1.Resource("tokenetesconfig"))}
}

// TokenetesConfigs returns an object that can list and get TokenetesConfigs.
func (s *tokenetesConfigLister) TokenetesConfigs(namespace string) TokenetesConfigNamespaceLister {
	return tokenetesConfigNamespaceLister{listers.NewNamespaced[*v1alpha1.TokenetesConfig](s.ResourceIndexer, namespace)}
}

// TokenetesConfigNamespaceLister helps list and get TokenetesConfigs.
// All objects returned here must be treated as read-only.
type TokenetesConfigNamespaceLister interface {
	// List lists all TokenetesConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TokenetesConfig, err error)
	// Get retrieves the TokenetesConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TokenetesConfig, error)
	TokenetesConfigNamespaceListerExpansion
}

// tokenetesConfigNamespaceLister implements the TokenetesConfigNamespaceLister
// interface.
type tokenetesConfigNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.TokenetesConfig]
}
